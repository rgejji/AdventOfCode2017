import numpy as num
#import scipy as scipy
#import sympy as sy



#inputStr = """12345678"""
#inputStr = """69317163492948606335995924319873"""
inputStr = """59708372326282850478374632294363143285591907230244898069506559289353324363446827480040836943068215774680673708005813752468017892971245448103168634442773462686566173338029941559688604621181240586891859988614902179556407022792661948523370366667688937217081165148397649462617248164167011250975576380324668693910824497627133242485090976104918375531998433324622853428842410855024093891994449937031688743195134239353469076295752542683739823044981442437538627404276327027998857400463920633633578266795454389967583600019852126383407785643022367809199144154166725123539386550399024919155708875622641704428963905767166129198009532884347151391845112189952083025"""


def readInput():
    size = len(inputStr)
    M = num.zeros((size,size), dtype=int)
    

    #pattern is [0,1,0,-1] repeated over and over for first row
    #for nth row, we repeat by n the digits
    #get rid of first column
    pattern = [0,1,0,-1]
    for i in range(size):
        for j in range(size):
            #account for repeat in loc and shift by 1
            repeatLoc = (j+1)/(i+1)
            #account for mod 4 behavior
            loc = (repeatLoc)%4
            M[i][j] = pattern[int(loc)]

    x = num.zeros((size), dtype=int)
    for i in range(size):
        x[i] = int(inputStr[i])

    return M,x


M, x = readInput()
#print(M)
#print(x)

numPhases = 100
for i in range(numPhases):
    x = abs(M.dot(x))%10

print(x[0:8])


